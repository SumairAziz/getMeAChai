import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import SessionWrapper from "../components/SessionWrapper";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className=' ${inter.className} overflow-x-hidden' >
        <div
          id="loader"
          className="fixed z-[999] flex justify-center items-center w-full h-full"
        >
          <div className="pl bg-[#212121]">
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__dot"></div>
            <div className="pl__text">Loadingâ€¦</div>
          </div>
        </div>
        <SessionWrapper>
          <Navbar />
          <div className="relative pb-10 text-white z-10 min-h-[77vh] bg-[#000000] bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#8080800a_1px,transparent_1px)] bg-[size:14px_24px]">
            <div className="fixed -z-10 left-10 right-0 top-[-10%] md:h-[700px] md:w-[700px] rounded-full bg-[radial-gradient(circle_400px_at_50%_300px,#fbfbfb36,#0000)]"></div>
            <div className="top-16 relative">
              {children}
            </div>
          </div>
          <Footer />
        </SessionWrapper>
        {/* Client-side script to hide loader */}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              window.addEventListener('load', () => {
                const loader = document.getElementById('loader');
                if (loader) {
                  loader.style.transition = 'opacity 0.5s';
                  loader.style.opacity = '0';
                  setTimeout(() => {
                    loader.style.display = 'none';
                  }, 500);
                }
              });
            `,
          }}
         />
      </body>
    </html>
  );
}
